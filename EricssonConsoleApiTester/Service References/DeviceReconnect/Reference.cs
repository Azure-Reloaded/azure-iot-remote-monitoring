//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EricssonConsoleApiTester.DeviceReconnect {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.dcp.ericsson.net/DeviceReconnect", ConfigurationName="DeviceReconnect.DeviceReconnect")]
    public interface DeviceReconnect {
        
        // CODEGEN: Generating message contract since the operation reconnect is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1 reconnect(EricssonConsoleApiTester.DeviceReconnect.reconnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1> reconnectAsync(EricssonConsoleApiTester.DeviceReconnect.reconnectRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.dcp.ericsson.net/DeviceReconnect")]
    public partial class Reconnect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Resource resourceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public Resource resource {
            get {
                return this.resourceField;
            }
            set {
                this.resourceField = value;
                this.RaisePropertyChanged("resource");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.dcp.ericsson.net/DeviceReconnect")]
    public partial class Resource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private ResourceType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public ResourceType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.dcp.ericsson.net/DeviceReconnect")]
    public enum ResourceType {
        
        /// <remarks/>
        imsi,
        
        /// <remarks/>
        msisdn,
        
        /// <remarks/>
        icc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.dcp.ericsson.net/DeviceReconnect")]
    public partial class ReconnectResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class reconnectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.dcp.ericsson.net/DeviceReconnect", Order=0)]
        public EricssonConsoleApiTester.DeviceReconnect.Reconnect Reconnect;
        
        public reconnectRequest() {
        }
        
        public reconnectRequest(EricssonConsoleApiTester.DeviceReconnect.Reconnect Reconnect) {
            this.Reconnect = Reconnect;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class reconnectResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.dcp.ericsson.net/DeviceReconnect", Order=0)]
        public EricssonConsoleApiTester.DeviceReconnect.ReconnectResponse ReconnectResponse;
        
        public reconnectResponse1() {
        }
        
        public reconnectResponse1(EricssonConsoleApiTester.DeviceReconnect.ReconnectResponse ReconnectResponse) {
            this.ReconnectResponse = ReconnectResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DeviceReconnectChannel : EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceReconnectClient : System.ServiceModel.ClientBase<EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect>, EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect {
        
        public DeviceReconnectClient() {
        }
        
        public DeviceReconnectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceReconnectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceReconnectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceReconnectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1 EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect.reconnect(EricssonConsoleApiTester.DeviceReconnect.reconnectRequest request) {
            return base.Channel.reconnect(request);
        }
        
        public EricssonConsoleApiTester.DeviceReconnect.ReconnectResponse reconnect(EricssonConsoleApiTester.DeviceReconnect.Reconnect Reconnect1) {
            EricssonConsoleApiTester.DeviceReconnect.reconnectRequest inValue = new EricssonConsoleApiTester.DeviceReconnect.reconnectRequest();
            inValue.Reconnect = Reconnect1;
            EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1 retVal = ((EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect)(this)).reconnect(inValue);
            return retVal.ReconnectResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1> EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect.reconnectAsync(EricssonConsoleApiTester.DeviceReconnect.reconnectRequest request) {
            return base.Channel.reconnectAsync(request);
        }
        
        public System.Threading.Tasks.Task<EricssonConsoleApiTester.DeviceReconnect.reconnectResponse1> reconnectAsync(EricssonConsoleApiTester.DeviceReconnect.Reconnect Reconnect) {
            EricssonConsoleApiTester.DeviceReconnect.reconnectRequest inValue = new EricssonConsoleApiTester.DeviceReconnect.reconnectRequest();
            inValue.Reconnect = Reconnect;
            return ((EricssonConsoleApiTester.DeviceReconnect.DeviceReconnect)(this)).reconnectAsync(inValue);
        }
    }
}
