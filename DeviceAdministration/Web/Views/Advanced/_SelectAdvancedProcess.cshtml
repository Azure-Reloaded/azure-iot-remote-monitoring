@using GlobalResources
@using Microsoft.Azure.Devices.Applications.RemoteMonitoring.Common.Models
@model Microsoft.Azure.Devices.Applications.RemoteMonitoring.Common.Models.ApiRegistrationModel

<div>
    <ul class="list_select_select_advanced_process">
        <li class="list_item_select_advanced_process">
            <h2 class="select_advanced_process_subhead">@Strings.ApiRegistrationTitle</h2>
            @if (Model.ApiRegistrationProvider == null)
            {
                <p class="select_advanced_process_description">
                    @Strings.ApiRegistrationDescription
                </p>
                <p>
                    <div class="form-group">
                        <select class="form-control" id="apiRegistrationApiSelection">
                            <option value="">@Strings.ApiRegistrationSelectOptionInitial</option>
                            <option value="Jasper">@Strings.ApiRegistrationSelectOptionJasper</option>
                            <option value="Ericsson">@Strings.ApiRegistrationSelectOptionEricsson</option>
                        </select>
                        <div class="api_check_field" id="apiRegistrationApiSelectionRequired">
                            @Strings.RequiredValue
                        </div>
                    </div>
                </p>
                <p>
                    <button class="add_new_button" type="submit" id="apiRegistrationButton">
                        @Strings.Create
                    </button>
                </p>
            }
            else
            {
                <p class="select_advanced_process_description">
                    @Strings.ApiAmendmentDescription
                </p>
                <p class="select_advanced_process_description">
                    @switch (Model.ApiRegistrationProvider)
                    {
                        case ApiRegistrationProviderType.Jasper:
                            <storng>@Strings.ApiRegistrationSelectOptionJasper</storng>
                            break;
                        case ApiRegistrationProviderType.Ericsson:
                            <storng>@Strings.ApiRegistrationSelectOptionEricsson</storng>
                            break;
                    }
                </p>
                @Html.HiddenFor(model => model.ApiRegistrationProvider)
                <p>
                    <fieldset class="fieldset_button">
                        <button class="button_base edit_button" type="submit" id="apiRegistrationEditButton">
                            @Strings.Edit
                        </button>
                        <button class="button_base edit_button" type="submit" id="apiRegistrationDeleteButton">
                            @Strings.Delete
                        </button>
                    </fieldset>
</p>
            }

        </li>
        <li class="list_item_select_advanced_process">
            <h2 class="select_advanced_process_subhead">@Strings.DeviceAssociationTitle</h2>
            <p class="select_advanced_process_description">
                @Html.Raw(@Strings.DeviceAssociationDescription)
            </p>
            <button class="add_new_button" type="submit" id="deviceAssociationButton">
                @Strings.Create
            </button>
            <button class="add_new_button" type="submit" id="deviceAssociationButton">
                @Strings.Delete
            </button>
        </li>
    </ul>
</div>
<script type="text/javascript">
    $(window).ready(
        function () {
            'use strict';
            var config = {
                subheadContent: '',
                goBackUrl: ''
            };

            var validateApiProviderFields = function () {
                var valOk = true;
                $("#apiRegistrationApiSelection").each(function () {
                    if (!$("#" + this.id).val()) {
                        $("#" + this.id + "Required").show();
                        valOk = false;
                    }
                });
                return valOk;
            }

            IoTApp.Advanced.initSubView(config);

            $('#apiRegistrationButton').click(function () {
                var providerSelectFieldId = "#apiRegistrationApiSelection";
                $(providerSelectFieldId + "Required").hide();
                var selectedProvider = $(providerSelectFieldId).val();
                if (!selectedProvider) {
                    $(providerSelectFieldId + "Required").show();
                    return;
                }
                redirectToApiRegistration(selectedProvider);
            });

            $('#apiRegistrationEditButton').click(function () {
                var selectedProvider = $("#ApiRegistrationProvider").val();
                redirectToApiRegistration(selectedProvider);
            });

            $("#apiRegistrationDeleteButton").bind("click", function () {
                $.post('/Advanced/DeleteRegistration', { }, function (response) {

                    location.reload();
                });
            });

            $('#deviceAssociationButton').click(
                function () {
                    IoTApp.Advanced.redirecToPartial('@Url.Action("DeviceAssociation")');
                }
            );

          

            function redirectToApiRegistration(selectedProvider) {
                switch (selectedProvider) {
                    case 'Jasper': {
                        IoTApp.Advanced.redirecToPartial('@Url.Action("ApiRegistrationJasper")');
                        break;
                    }
                    case 'Ericsson': {
                        IoTApp.Advanced.redirecToPartial('@Url.Action("ApiRegistrationEricsson")');
                        break;
                    }
                    default:
                        throw 'Selected provider ' + selectedProvider + ' is not supported';
                        break;
                }
            }
        }
    );
</script>